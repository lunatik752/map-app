{"version":3,"sources":["common/Page404/Page404.module.css","common/Input/Input.module.css","common/Button/Button.module.css","common/Page404/Page404.tsx","common/Input/Input.tsx","common/Button/Button.tsx","api/geocoder-api.ts","api/search-org-api.ts","state/geocoder-reducer.ts","components/SearchModule/SearchModule.tsx","components/StartPage/StartPage.tsx","components/MapPage/MapPage.tsx","main/routes/Routes.tsx","App.tsx","reportWebVitals.ts","state/store.ts","index.tsx"],"names":["module","exports","Page404","className","style","container","errorNumber","text","Input","React","memo","props","onEnter","error","restProps","onClickEnter","useCallback","event","key","styles","input","onKeyPress","Button","button","name","instance","axios","create","baseURL","getCoordinate","requestText","a","get","data","response","getSchoolsApi","initialState","cityCoordinates","schools","SearchModule","useState","country","setCountry","city","setCity","dispatch","useDispatch","setCountryCallback","e","currentTarget","value","setCityCallback","onSearch","console","log","result1","result2","type","GeoObjectCollection","featureMember","GeoObject","Point","pos","split","reverse","map","el","features","getCityCoordinates","placeholder","onChange","onClick","StartPage","useSelector","state","length","to","wrapper","MapPage","coordinate","schoolsItems","height","width","center","zoom","school","geometry","coordinates","properties","iconCaption","CompanyMetaData","id","Routes","exact","path","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","arr","RegExp","join","filter","s","toLowerCase","match","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a44ab170.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Page404_container__2T7f6\",\"errorNumber\":\"Page404_errorNumber__3glPH\",\"text\":\"Page404_text__3F69a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__KFXoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1z7jd\"};","import style from \"./Page404.module.css\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div className={style.container}>\r\n            <span className={style.errorNumber}>404</span>\r\n            <span className={style.text}>Page not found</span>\r\n        </div>\r\n    );\r\n}\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, useCallback} from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { onEnter?: () => void, error?: string };\r\n\r\nconst Input = React.memo((props: InputPropsType) => {\r\n    const {onEnter, error, ...restProps} = props;\r\n\r\n    const onClickEnter = useCallback((event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (onEnter && event.key === \"Enter\") {\r\n            onEnter()\r\n        }\r\n    }, [onEnter])\r\n\r\n    return (\r\n        <>\r\n            <input className={styles.input} {...restProps}  onKeyPress={onClickEnter}/>\r\n            {error ? <span>{error}</span> : ''}\r\n        </>\r\n    );\r\n})\r\n\r\nexport default Input;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './Button.module.css';\r\n\r\ntype   ButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\nconst Button = React.memo((props: ButtonPropsType) => {\r\n    const {...restProps} = props;\r\n    return (\r\n        <button className={styles.button} {...restProps}>{props.name}</button>\r\n    );\r\n})\r\n\r\nexport default Button;\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://geocode-maps.yandex.ru/1.x/',\r\n})\r\nconst apikey = \"cf257613-388c-495a-989f-98c40a840056\"\r\n\r\nexport const getCoordinate = async (requestText: string) => {\r\n    const data = await instance.get(`?format=json&geocode=${requestText}&apikey=${apikey}`)\r\n    return data.data.response\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://search-maps.yandex.ru/v1/',\r\n})\r\nconst apikey = \"2fabdc58-1495-4a84-afef-ac1bc6f1f91c\"\r\n\r\nexport const getSchoolsApi = async (requestText: string) => {\r\n    const response = await instance.get(`?text=${requestText} обучение программированию, it школа&results=100&lang=ru_RU&apikey=${apikey}`)\r\n    return response.data\r\n}\r\n","import {getCoordinate} from \"../api/geocoder-api\";\r\nimport {getSchoolsApi} from \"../api/search-org-api\";\r\n//\r\n// type GeometryType = {\r\n//     coordinates: Array<number>\r\n//     type: string\r\n// }\r\n//\r\n// type CategoriesType = {\r\n//     class: string\r\n//     name: string\r\n// }\r\n//\r\n// type PhonesType = {\r\n//     formatted: string\r\n//     type: string\r\n// }\r\n//\r\n// type CompanyMetaDataType = {\r\n//     Categories: Array<CategoriesType>,\r\n//     Hours: {\r\n//         Availabilities: []\r\n//         text: string\r\n//     },\r\n//     Phones: Array<PhonesType>\r\n//     address: string\r\n//     id: string\r\n//     name: string\r\n//     url: string\r\n// }\r\n//\r\n// type BoundedByType = Array<number>\r\n//\r\n// type PropertiesType = {\r\n//     CompanyMetaData: CompanyMetaDataType\r\n//     boundedBy: Array<BoundedByType>\r\n//     description: string\r\n//     name: string\r\n//\r\n// }\r\n//\r\n// type SchoolType = {\r\n//     geometry: GeometryType\r\n//     properties: PropertiesType\r\n//     name: string\r\n//     type: string\r\n// }\r\n\r\nexport type SchoolType =\r\n    {\r\n        geometry: {\r\n            coordinates: Array<number>\r\n            type: string\r\n        },\r\n        properties: {\r\n            CompanyMetaData: {\r\n                Categories: Array<{\r\n                    class: string\r\n                    name: string\r\n                }>\r\n                Hours: {\r\n                    Availabilities: []\r\n                    text: string\r\n                }\r\n                Phones: Array<{\r\n                    formatted: string\r\n                    type: string\r\n                }>\r\n\r\n                address: string\r\n                id: string\r\n                name: string\r\n                url: string\r\n            }\r\n            boundedBy: Array<Array<number>>\r\n            description: string\r\n            name: string\r\n        }\r\n        type: string\r\n    }\r\n\r\n\r\ntype InitialStateType = {\r\n    cityCoordinates: Array<number>,\r\n    schools: Array<SchoolType>\r\n}\r\n\r\n// export type InitialStateType = typeof initialState\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    cityCoordinates: [53.90, 27.56],\r\n    schools: [] as Array<SchoolType>\r\n}\r\n\r\n/*schools: [\r\n    {\r\n        geometry: {\r\n            coordinates: [1, 2],\r\n            type: ''\r\n        },\r\n        properties: {\r\n            CompanyMetaData: {\r\n                Categories: [\r\n                    {\r\n                        class: '',\r\n                        name: ''\r\n                    }\r\n                ],\r\n                Hours: {\r\n                    Availabilities: [],\r\n                    text: ''\r\n                },\r\n                Phones: [\r\n                    {\r\n                        formatted: '',\r\n                        type: \"phone\"\r\n                    }\r\n                ],\r\n                address: '',\r\n                id: '',\r\n                name: '',\r\n                url: ''\r\n            },\r\n            boundedBy: [\r\n                [1, 2],\r\n                [27.523996, 53.9096525]\r\n            ],\r\n            description: '',\r\n            name: ''\r\n        },\r\n        type: ''\r\n    }\r\n]*/\r\n\r\nexport const geocodeReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'GET_CITY_COORDINATES':\r\n            const arr = ['средняя', 'гимназия']\r\n            const value = new RegExp(arr.join('|'), 'i')\r\n            return {\r\n                ...state,\r\n                cityCoordinates: action.value,\r\n                schools: action.schools.filter(s => !s.properties.name.toLowerCase().match(value)).map((s) => ({\r\n                    ...s,\r\n                    coordinates: s.geometry.coordinates.reverse()\r\n                }))\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n// action types\r\ntype ActionType = ReturnType<typeof addCityCoordinates>\r\n\r\n// action creators\r\nexport const addCityCoordinates = (value: Array<number>, schools: Array<any>) => ({\r\n    type: 'GET_CITY_COORDINATES',\r\n    value,\r\n    schools\r\n} as const)\r\n\r\n// Thunk\r\n\r\nexport const getCityCoordinates = (country: string, city: string) => async (dispatch: any) => {\r\n    debugger\r\n    const result1 = await getCoordinate(country + ' ' + city)\r\n    const result2 = await getSchoolsApi(country + ' ' + city)\r\n\r\n    dispatch(addCityCoordinates(result1.GeoObjectCollection.featureMember[0].GeoObject.Point.pos.split(' ').reverse().map((el: string) => +el), result2.features))\r\n}\r\n\r\n","import React, {ChangeEvent, useCallback, useState} from 'react';\nimport Input from \"../../common/Input/Input\";\nimport Button from \"../../common/Button/Button\";\nimport {getCityCoordinates} from '../../state/geocoder-reducer';\nimport {useDispatch} from 'react-redux';\n\n\nexport const SearchModule = React.memo(() => {\n    const [country, setCountry] = useState<string>('');\n    const [city, setCity] = useState<string>('');\n    const dispatch = useDispatch()\n\n    const setCountryCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => setCountry(e.currentTarget.value),\n        [setCountry]);\n\n    const setCityCallback = useCallback((e: ChangeEvent<HTMLInputElement>) => setCity(e.currentTarget.value),\n        [setCity]);\n\nconst  onSearch = useCallback(() => {\n    console.log(country + ' ' + city)\n    dispatch(getCityCoordinates(country, city))\n\n    setCountry('')\n    setCity('')\n}, [city, country, dispatch])\n\n    return (\n        <div>\n            <Input placeholder={'Страна'} onChange={setCountryCallback} value={country}/>\n            <Input placeholder={'Город'} onChange={setCityCallback} value={city}/>\n            <Button name='Найти' onClick={onSearch}/>\n        </div>\n    )\n})\n\n\n\n","import React, {useCallback} from 'react';\r\nimport { SearchModule } from '../SearchModule/SearchModule';\r\nimport style from './StartPage.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport { AppRootStateType } from '../../state/store';\r\nimport {SchoolType} from \"../../state/geocoder-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const StartPage = React.memo(() => {\r\n\r\n    const schools = useSelector<AppRootStateType, Array<SchoolType>>(state => state.cityCoordinates.schools)\r\n\r\n    if (schools.length !== 0) {return <Redirect to={'/mapPage'}/>}\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <h1>IT школы вашего города</h1>\r\n            <p>Для начала работы введите страну и город в котором вы хотите найти IT школы</p>\r\n            <SearchModule/>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React from \"react\";\r\nimport {Map, Placemark, YMaps} from \"react-yandex-maps\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from '../../state/store';\r\nimport {SchoolType} from \"../../state/geocoder-reducer\";\r\nimport {SearchModule} from \"../SearchModule/SearchModule\";\r\n\r\ntype PropsType = {}\r\n\r\nexport const MapPage = React.memo((props: PropsType) => {\r\n\r\n    const coordinate = useSelector<AppRootStateType, Array<number>>(state => state.cityCoordinates.cityCoordinates)\r\n    const schoolsItems = useSelector<AppRootStateType, Array<SchoolType>>(state => state.cityCoordinates.schools)\r\n\r\n\r\n    console.log(schoolsItems)\r\n\r\n    return (\r\n        <div>\r\n            <SearchModule/>\r\n            <YMaps>\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Map state={{center: coordinate, zoom: 12}} width={'100%'} height={'100vh'}>\r\n                        {schoolsItems.map((school) => <Placemark key={school.properties.CompanyMetaData.id} geometry={school.geometry.coordinates} properties={{\r\n                            iconCaption: school.properties.name,\r\n                        }}/>)}\r\n                    </Map>\r\n                    {schoolsItems.length}\r\n                </div>\r\n            </YMaps>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Page404} from \"../../common/Page404/Page404\";\r\nimport {StartPage} from \"../../components/StartPage/StartPage\";\r\nimport {MapPage} from \"../../components/MapPage/MapPage\";\r\n\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={'/'} render={() => <StartPage/>}/>\r\n            <Route  path={'/mapPage'} render={() => <MapPage/>}/>\r\n            <Route path={'*'} render={() => <Page404/>}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {MapPage} from './components/MapPage/MapPage';\r\nimport {SearchModule} from \"./components/SearchModule/SearchModule\";\r\nimport Routes from \"./main/routes/Routes\";\r\nimport {StartPage} from \"./components/StartPage/StartPage\";\r\n\r\n\r\nconst App = React.memo(() => {\r\n\r\n    return (\r\n        <div>\r\n            <Routes/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","\r\nimport thunk from \"redux-thunk\";\r\nimport { geocodeReducer } from \"./geocoder-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\n// import {searchSchoolReducer} from \"./search-schools-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    cityCoordinates: geocodeReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from './state/store';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}